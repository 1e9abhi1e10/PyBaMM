name: Run benchmarks on push
on:
  push:

jobs:
  benchmarks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
          cache: 'pip'
          cache-dependency-path: |
            setup.py
            requirements.txt
      - name: Install Linux system dependencies
        uses: awalsh128/cache-apt-pkgs-action@v1.3.0
        with:
          packages: gfortran gcc libopenblas-dev
          execute_install_scripts: true
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip wheel setuptools virtualenv asv wget cmake casadi numpy
      - name: Install SuiteSparse and Sundials
        run: python scripts/install_KLU_Sundials.py
      - name: Fetch base branch
        run: |
          # This workflow also runs for merge commits
          # on develop. In this case, we don't want to be
          # fetching the develop branch.
          current_branch=$(git rev-parse --abbrev-ref HEAD)
          if [ $current_branch != "develop" ]; then
              git fetch origin develop:develop
          fi

      - name: Run benchmarks
        run: |
          asv machine --machine "GitHubRunner"
          # Get IDs of branch and PR commits
          BASE_COMMIT=$(git rev-parse develop)
          HEAD_COMMIT=$(git rev-parse HEAD)
          echo $BASE_COMMIT | tee commits_to_compare.txt
          echo $HEAD_COMMIT | tee -a commits_to_compare.txt
          asv run HASHFILE:commits_to_compare.txt --m "GitHubRunner" --show-stderr --strict -v
      - name: Compare commits' benchmark results
        run: |
          BASE_COMMIT=$(head -1 commits_to_compare.txt)
          HEAD_COMMIT=$(tail -1 commits_to_compare.txt)
          echo "SUMMARY OF CHANGES"
          echo "=================="
          asv compare $BASE_COMMIT $HEAD_COMMIT | tee compare_result.txt
          # Make sure grep returns error code 0 even if code 1 is
          # returned because no match is found
          REGRESSIONS=$({ grep "+" compare_result.txt || test $? = 1; })
          if [ ! -z "$REGRESSIONS" ]; \
          then \
          echo "REGRESSIONS FOUND"; \
          echo "================="; \
          echo "$REGRESSIONS"; \
          echo "================="; \
          printf "Found %d regression(s)\n" $(echo "$REGRESSIONS" | wc -l); \
          exit 1; \
          fi
