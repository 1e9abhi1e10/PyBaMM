name: Update version

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type. Leave blank for an actual release or "rc2", "rc3", ..., for release candidates."'
        default: ""
  schedule:
     # Run at 10 am UTC on 1st every 4th month from January through December
     - cron: 0 10 1 1-12/4 *

jobs:
  update-version:
    # This workflow is only of value to PyBaMM and would always be skipped in forks
    # if: github.repository_owner == 'pybamm-team'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          pip install wheel
          pip install --editable .

      - name: Get current date for the first release candidate
        if: github.event_name == 'schedule'
        run: echo "VERSION=$(date +'v%y.%-m')rc1" >> $GITHUB_ENV

      - name: Get current date for a manual release
        if: github.event_name == 'workflow_dispatch'
        run: echo "VERSION=$(date +'v%y.%-m')${{ github.event.inputs.release_type }}" >> $GITHUB_ENV

      - name: Update version
        run: python scripts/update_version.py

      - name: Create Pull Request
        id: version_pr
        uses: peter-evans/create-pull-request@v3
        with:
          delete-branch: true
          branch-suffix: short-commit-hash
          commit-message: Update version to ${{ env.VERSION }}
          title: Update to ${{ env.VERSION }}
          body: |
            - [x] Update to ${{ env.VERSION }}
            - [ ] Check the [release checklist](https://github.com/pybamm-team/PyBaMM/blob/develop/.github/release_checklist.md)

      - name: Make a PR from develop to main
        uses: repo-sync/pull-request@v2
        with:
          destination_branch: "main"
          pr_title: "Make release ${{ env.VERSION }}"
          pr_body: "**DO NOT MERGE UNTIL #${{ steps.version_pr.outputs.pull-request-number }} IS MERGED.**<br><br>Make release ${{ env.VERSION }}"
          github_token: ${{ secrets.GITHUB_TOKEN }}
